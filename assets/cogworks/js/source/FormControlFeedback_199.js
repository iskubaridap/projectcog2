define([],function(){
	return [function(require,module,exports){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _get=function get(_x,_x2,_x3){var _again=true;_function:while(_again){var object=_x,property=_x2,receiver=_x3;_again=false;if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined}else{_x=parent;_x2=property
;_x3=receiver;_again=true;desc=parent=undefined;continue _function}}else if("value"in desc){return desc.value}else{var getter=desc.get;if(getter===undefined){return undefined}return getter.call(receiver)}}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var Icon=require("./Icon");var FormControlFeedback=function(_Icon){_inherits(FormControlFeedback,_Icon);function FormControlFeedback(){_classCallCheck(this,FormControlFeedback);_get(Object.getPrototypeOf(FormControlFeedback.prototype),"constructor",this).call(this);this.cssClasses.system.feedback="form-control-feedback";this.attributes["aria-hidden"]=true}_createClass(FormControlFeedback,[{key:"canBeDroppedIn",value:function canBeDroppedIn(component){var FormGroup=require("./FormGroup");return _get(Object.getPrototypeOf(FormControlFeedback.prototype),"canBeDroppedIn",this).call(this,component)&&component instanceof FormGroup}},{key:"convertUp",value:function convertUp(){return null}}]);return FormControlFeedback}(Icon);FormControlFeedback.prettyName="Form Control Feedback";FormControlFeedback.description="This is a Bootstrap component which is added to Form Groups and displays an icon next to inputs. Use it to show warning or success icons, or to mark fields that are required.";module.exports=FormControlFeedback},{"./FormGroup":200,"./Icon":203}]
});