define([],function(){
	return [function(require,module,exports){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var selectElementContents=require("./selectElementContents");var insertAtCaret=require("./insertAtCaret");module.exports=function smartEditableElement(options){return new SmartEditable(options)};var SmartEditable=function(){function SmartEditable(options){_classCallCheck(this,SmartEditable);this.options=options;if(options.doubleClickEditing){options.element.on("dblclick",".name",this.editIt.bind(this))}options.element.on("click",".edit",this.editIt.bind(this));options.element.on("click",".delete",this.deleteIt.bind(this));this.ignoreFocusout=false}_createClass(SmartEditable,[{key:"editIt",value:function editIt(e){var target=$(e.target).closest(".smart-editable");this.startEditing(target)}},{key:"startEditing",value:function startEditing(item){var select=arguments.length<=1||arguments[1]===undefined?false:arguments[1];var name=item.find(".name");item.addClass("editing");if(name.data("editable")){name.prop("contenteditable",true).focus();if(select){name.select()}selectElementContents(name[0]);this.options.element.on("focusout",".name",this.focusout.bind(this));this.options.element.on("keydown",".name",this.keydown.bind(this));this.options.element.on("paste",".name",this.paste.bind(this))}else{var input=item.find("input");var value=name.text();name.hide();input.val(value).focus();if(select){input.select()}this.options.element.on("focusout","input",this.focusout.bind(this));this.options.element.on("keydown","input",this.keydown.bind(this))}if(this.options.onStartEdit){this.options.onStartEdit()}}},{key:"paste",value:function paste(e){e.preventDefault();var value=e.originalEvent.clipboardData.getData("Text");value=value.replace(/\n/g,"");insertAtCaret(e.target,value)}},{key:"stopEditing",value:function stopEditing(){this.options.element.off("focusout keydown paste");this.options.element.find(".editing").removeClass("editing")
;this.options.element.find("[contenteditable]").prop("contenteditable",false);this.options.element.find(".name").show();if(this.options.onStopEdit){this.options.onStopEdit()}}},{key:"focusout",value:function focusout(){if(this.ignoreFocusout){return}this.commitIt()}},{key:"keydown",value:function keydown(e){if(e.which==27){this.cancelIt()}else if(e.which==13){this.commitIt()}}},{key:"cancelIt",value:function cancelIt(){if(this.options.onCancel){this.options.onCancel()}this.stopEditing()}},{key:"commitIt",value:function commitIt(e){this.ignoreFocusout=true;var that=this;setTimeout(function(){that.ignoreFocusout=false},100);if(e){e.preventDefault();e.stopPropagation()}var item=this.options.element.find(".editing");var input=item.find("input");var value="";if(input.length){value=input.val()}else{value=item.find(".name").text()}var result=this.options.onCommit(item,value);if(result!==false){this.stopEditing()}}},{key:"deleteIt",value:function deleteIt(e){var target=$(e.target);var item=target.closest(".smart-editable");this["delete"](item)}},{key:"delete",value:function _delete(item){this.options.onDelete(item)}}]);return SmartEditable}()},{"./insertAtCaret":583,"./selectElementContents":609}]
});