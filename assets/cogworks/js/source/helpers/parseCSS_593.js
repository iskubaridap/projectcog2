define([],function(){
	return [function(require,module,exports){"use strict";var css=require("css");var restoreCSSList=require("./restoreCSSList");module.exports=function parseCSS(str,blockProps,ruleProps){var result=[];str=str.replace(/url\("data:image\/svg\+xml.*?"\)/g,"url([svg])");walk(result,css.parse(str).stylesheet.rules);return restoreCSSList(result,blockProps,ruleProps)};function walk(result,arr,block){var mediaQuery=arguments.length<=3||arguments[3]===undefined?false:arguments[3];for(var i=0;i<arr.length;i++){switch(arr[i].type){case"media":if(/print/.test(arr[i].media)){continue}walk(result,arr[i].rules,null,arr[i].media);break;case"keyframes":if(arr[i].vendor)continue;var keyframesBlock={type:"keyframes",name:arr[i].name,blocks:[],system:false,enabled:true};for(var j=0;j<arr[i].keyframes.length;j++){var rule=arr[i].keyframes[j];if(rule.type!="keyframe")continue;var _tmpBlock={selector:rule.values.join(", "),mediaQuery:false,rules:[],enabled:true};for(var k=0;k<rule.declarations.length;k++){var declaration=rule.declarations[k];if(declaration.type!="declaration")continue;_tmpBlock.rules.push({property:declaration.property,value:declaration.value,enabled:true,system:false})}keyframesBlock.blocks.push(_tmpBlock)}result.push(keyframesBlock);break;case"rule":var tmpBlock={selector:arr[i].selectors.join(", "),mediaQuery:mediaQuery,rules:[],enabled:true};for(var j=0;j<arr[i].declarations.length;j++){var declaration=arr[i].declarations[j];if(declaration.type!="declaration")continue;tmpBlock.rules.push({property:declaration.property,value:declaration.value,enabled:true,system:false})}result.push(tmpBlock);break}}}},{"./restoreCSSList":604,"css":954}]
});