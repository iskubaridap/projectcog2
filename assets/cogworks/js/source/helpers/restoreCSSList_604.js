define([],function(){
	return [function(require,module,exports){"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}else{return Array.from(arr)}}var CSSBlock=require("../base/CSSBlock");var CSSKeyframes=require("../base/CSSKeyframes");module.exports=function restoreCSSList(list){var blockProps=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];var ruleProps=arguments.length<=2||arguments[2]===undefined?{}:arguments[2];return list.map(function(b){var tmp;var blocks=[],rules=[];if(b.type=="keyframes"){tmp=new CSSKeyframes;tmp.unserialize(b);blocks=tmp.blocks;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=blocks[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _rules;var block=_step.value;(_rules=rules).push.apply(_rules,_toConsumableArray(block.rules))}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator["return"]){_iterator["return"]()}}finally{if(_didIteratorError){throw _iteratorError}}}}else{tmp=new CSSBlock;tmp.unserialize(b);blocks=[tmp];rules=tmp.rules}for(var i=0;i<rules.length;i++){for(var k in ruleProps)if(ruleProps.hasOwnProperty(k)){rules[i][k]=ruleProps[k]}}for(var i=0;i<blocks.length;i++){for(var k in blockProps)if(blockProps.hasOwnProperty(k)){blocks[i][k]=blockProps[k]}}return tmp})}},{"../base/CSSBlock":12,"../base/CSSKeyframes":14}]
});