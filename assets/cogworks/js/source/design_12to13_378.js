define([],function(){
	return [function(require,module,exports){"use strict";module.exports=function convert(json){var design=json.design;design.pages=conv(design.pages,"Pages");design.assets.js=conv(design.assets.js,"JavaScript",true,true);design.assets.css=conv(design.assets.css,"CSS",true,true);design.assets.fonts=conv(design.assets.fonts,"Fonts");design.assets.images=conv(design.assets.images,"Images");json.version=13;return json};function removeDuplicates(arr){var newArr=[];var names=new Set;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=arr[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var item=_step.value;if(names.has(item.name))continue;names.add(item.name);newArr.push(item)}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator["return"]){_iterator["return"]()}}finally{if(_didIteratorError){throw _iteratorError}}}return newArr}function conv(arr,name){var removeDups=arguments.length<=2||arguments[2]===undefined?false:arguments[2];var calcPriority=arguments.length<=3||arguments[3]===undefined?false:arguments[3];if(removeDups){arr=removeDuplicates(arr)}for(var i=0;i<arr.length;i++){if(calcPriority){arr[i].priority=arr.length-i}else{arr[i].priority=0}}return{name:name,expanded:false,children:arr}}},{}]
});