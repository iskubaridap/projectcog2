define([],function(){
	return [function(require,module,exports){"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var IconFont=function(){function IconFont(){_classCallCheck(this,IconFont);this.cdn="";this.destinations=null;this.icons=[];this.name="";this.sources=[];this.stylesheet="";this.type="";this.weight=0}_createClass(IconFont,[{key:"hasIcon",value:function hasIcon(name){var prefix=this.icons.map(function(group){return group.prefix}).join("|");var match=name.match(new RegExp(prefix));return!!match&&match.index===0}},{key:"matchIconsInString",value:function matchIconsInString(string){var prefix=this.icons.map(function(group){return group.prefix}).join("|");return new RegExp(prefix).test(string)}},{key:"getGroups",value:function getGroups(){return this.icons}},{key:"getSourcePaths",value:function getSourcePaths(){var sepRegex=/\//g;var sep=electron.separator;var paths=[];for(var i=0;i<this.sources.length;i++){paths.push({source:this.sources[i].replace(sepRegex,sep),destination:(this.destinations?this.destinations[i]:this.sources[i]).replace(sepRegex,sep)})}return paths}},{key:"serialize",value:function serialize(){}},{key:"unserialize",value:function unserialize(obj){this.cdn=obj.cdn;this.destinations=obj.destinations;this.icons=obj.icons;this.name=obj.name;this.sources=obj.sources;this.stylesheet=obj.stylesheet;this.type=obj.type;this.weight=obj.weight}}]);return IconFont}();module.exports=IconFont},{}]
});